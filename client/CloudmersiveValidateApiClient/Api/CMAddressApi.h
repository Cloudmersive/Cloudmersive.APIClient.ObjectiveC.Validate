#import <Foundation/Foundation.h>
#import "CMGetTimezonesRequest.h"
#import "CMGetTimezonesResponse.h"
#import "CMParseAddressRequest.h"
#import "CMParseAddressResponse.h"
#import "CMValidateAddressRequest.h"
#import "CMValidateAddressResponse.h"
#import "CMValidateCountryRequest.h"
#import "CMValidateCountryResponse.h"
#import "CMApi.h"

/**
* validateapi
* The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
*
* OpenAPI spec version: v1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface CMAddressApi: NSObject <CMApi>

extern NSString* kCMAddressApiErrorDomain;
extern NSInteger kCMAddressApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(CMApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Validate and normalize country information, return ISO 3166-1 country codes and country name
/// Validates and normalizes country information, and returns key information about a country.  Also returns distinct time zones in the country.
///
/// @param input Input request
/// 
///  code:200 message:"OK"
///
/// @return CMValidateCountryResponse*
-(NSURLSessionTask*) addressCountryWithInput: (CMValidateCountryRequest*) input
    completionHandler: (void (^)(CMValidateCountryResponse* output, NSError* error)) handler;


/// Gets IANA/Olsen time zones for a country
/// Gets the IANA/Olsen time zones for a country.
///
/// @param input Input request
/// 
///  code:200 message:"OK"
///
/// @return CMGetTimezonesResponse*
-(NSURLSessionTask*) addressGetTimezoneWithInput: (CMGetTimezonesRequest*) input
    completionHandler: (void (^)(CMGetTimezonesResponse* output, NSError* error)) handler;


/// Parse an unstructured input text string into an international, formatted address
/// Uses machine learning and Natural Language Processing (NLP) to handle a wide array of cases, including non-standard and unstructured address strings across a wide array of countries and address formatting norms.
///
/// @param input Input parse request
/// 
///  code:200 message:"OK"
///
/// @return CMParseAddressResponse*
-(NSURLSessionTask*) addressParseStringWithInput: (CMParseAddressRequest*) input
    completionHandler: (void (^)(CMParseAddressResponse* output, NSError* error)) handler;


/// Validate a street address
/// Determines if an input structured street address is valid or invalid.  If the address is valid, also returns the latitude and longitude of the address.
///
/// @param input Input parse request
/// 
///  code:200 message:"OK"
///
/// @return CMValidateAddressResponse*
-(NSURLSessionTask*) addressValidateAddressWithInput: (CMValidateAddressRequest*) input
    completionHandler: (void (^)(CMValidateAddressResponse* output, NSError* error)) handler;



@end
