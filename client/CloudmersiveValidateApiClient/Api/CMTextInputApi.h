#import <Foundation/Foundation.h>
#import "CMXssProtectionBatchRequest.h"
#import "CMXssProtectionBatchResponse.h"
#import "CMXssProtectionResult.h"
#import "CMApi.h"

/**
* validateapi
* The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
*
* OpenAPI spec version: v1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface CMTextInputApi: NSObject <CMApi>

extern NSString* kCMTextInputApiErrorDomain;
extern NSInteger kCMTextInputApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(CMApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Check text input for Cross-Site-Scripting (XSS) attacks
/// Detects XSS (Cross-Site-Scripting) attacks from text input.
///
/// @param value User-facing text input.
/// 
///  code:200 message:"OK"
///
/// @return CMXssProtectionResult*
-(NSURLSessionTask*) textInputCheckXssWithValue: (NSString*) value
    completionHandler: (void (^)(CMXssProtectionResult* output, NSError* error)) handler;


/// Check and protect multiple text inputs for Cross-Site-Scripting (XSS) attacks in batch
/// Detects XSS (Cross-Site-Scripting) attacks from multiple text input.  Output preverses order of input items.
///
/// @param value User-facing text input.
/// 
///  code:200 message:"OK"
///
/// @return CMXssProtectionBatchResponse*
-(NSURLSessionTask*) textInputCheckXssBatchWithValue: (CMXssProtectionBatchRequest*) value
    completionHandler: (void (^)(CMXssProtectionBatchResponse* output, NSError* error)) handler;


/// Protect text input from Cross-Site-Scripting (XSS) attacks through normalization
/// Detects and removes XSS (Cross-Site-Scripting) attacks from text input through normalization.  Returns the normalized result, as well as information on whether the original input contained an XSS risk.
///
/// @param value User-facing text input.
/// 
///  code:200 message:"OK"
///
/// @return CMXssProtectionResult*
-(NSURLSessionTask*) textInputProtectXssWithValue: (NSString*) value
    completionHandler: (void (^)(CMXssProtectionResult* output, NSError* error)) handler;



@end
