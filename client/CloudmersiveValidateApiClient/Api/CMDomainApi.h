#import <Foundation/Foundation.h>
#import "CMCheckResponse.h"
#import "CMDomainQualityResponse.h"
#import "CMValidateUrlRequestFull.h"
#import "CMValidateUrlRequestSyntaxOnly.h"
#import "CMValidateUrlResponseFull.h"
#import "CMValidateUrlResponseSyntaxOnly.h"
#import "CMWhoisResponse.h"
#import "CMApi.h"

/**
* validateapi
* The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
*
* OpenAPI spec version: v1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface CMDomainApi: NSObject <CMApi>

extern NSString* kCMDomainApiErrorDomain;
extern NSInteger kCMDomainApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(CMApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Validate a domain name
/// Check whether a domain name is valid or not.  API performs a live validation by contacting DNS services to validate the existence of the domain name.
///
/// @param domain Domain name to check, for example \&quot;cloudmersive.com\&quot;.  The input is a string so be sure to enclose it in double-quotes.
/// 
///  code:200 message:"OK"
///
/// @return CMCheckResponse*
-(NSURLSessionTask*) domainCheckWithDomain: (NSString*) domain
    completionHandler: (void (^)(CMCheckResponse* output, NSError* error)) handler;


/// Get WHOIS information for a domain
/// Validate whether a domain name exists, and also return the full WHOIS record for that domain name.  WHOIS records include all the registration details of the domain name, such as information about the domain's owners.
///
/// @param domain Domain name to check, for example \&quot;cloudmersive.com\&quot;.   The input is a string so be sure to enclose it in double-quotes.
/// 
///  code:200 message:"OK"
///
/// @return CMWhoisResponse*
-(NSURLSessionTask*) domainPostWithDomain: (NSString*) domain
    completionHandler: (void (^)(CMWhoisResponse* output, NSError* error)) handler;


/// Validate a domain name's quality score
/// Check the quality of a domain name.  Supports over 9 million domain names.  Higher quality scores indicate more trust and authority in the domain name, with values ranging from 0.0 (low quality) to 10.0 (maximum quality).
///
/// @param domain Domain name to check, for example \&quot;cloudmersive.com\&quot;.
/// 
///  code:200 message:"OK"
///
/// @return CMDomainQualityResponse*
-(NSURLSessionTask*) domainQualityScoreWithDomain: (NSString*) domain
    completionHandler: (void (^)(CMDomainQualityResponse* output, NSError* error)) handler;


/// Validate a URL fully
/// Validate whether a URL is syntactically valid (does not check endpoint for validity), whether it exists, and whether the endpoint is up and passes virus scan checks.  Accepts various types of input and produces a well-formed URL as output.
///
/// @param request Input URL request
/// 
///  code:200 message:"OK"
///
/// @return CMValidateUrlResponseFull*
-(NSURLSessionTask*) domainUrlFullWithRequest: (CMValidateUrlRequestFull*) request
    completionHandler: (void (^)(CMValidateUrlResponseFull* output, NSError* error)) handler;


/// Validate a URL syntactically
/// Validate whether a URL is syntactically valid (does not check endpoint for validity).  Accepts various types of input and produces a well-formed URL as output.
///
/// @param request Input URL information
/// 
///  code:200 message:"OK"
///
/// @return CMValidateUrlResponseSyntaxOnly*
-(NSURLSessionTask*) domainUrlSyntaxOnlyWithRequest: (CMValidateUrlRequestSyntaxOnly*) request
    completionHandler: (void (^)(CMValidateUrlResponseSyntaxOnly* output, NSError* error)) handler;



@end
